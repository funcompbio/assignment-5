name: FCB-Python-autograding

on: [push]

jobs:
  build:
    name: autograding
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python modules
        run: sudo -H pip3 install pytest pytest-timeout
      - name: Checking for syntax errors
        run: python3 -m py_compile src/cagrepmax.py ; rm -f src/cagrepmax.pyc
      - name: Checking for FASTA files
        run: fnames=(disease_patient1_40_CAGs.fa disease_patient2_54_CAGs.fa disease_patient3_87_CAGs.fa healthy_patient1_22_CAGs.fa healthy_patient2_27_CAGs.fa healthy_patient3_28_CAGs.fa) ; md5cs=(616dd9531fec30e84b289bcc72affc18 b926b7514891df626840ac7aae40ba05 0dbaaae2c4740c5826c2291202cde526 eb37ed0ea830aff57f20c1756746c30a dad06be8df4d8ada9f7a8dd154cedd38 06a00d8a8f16f3cc0aa8b3679b4954fb) ; for i in `seq 0 $((${#fnames[@]}-1))` ; do { if [ -e FASTA/${fnames[$i]} ]; then { if [ `md5sum FASTA/${fnames[$i]} | cut -d ' ' -f 1` == ${md5cs[$i]} ] ; then exit 0 ; else { echo WRONG FILE FASTA/${fnames[$i]} >&2 ; exit 1 ; } fi } ; else { echo MISSING FILE FASTA/${fnames[$i]} >&2 ; exit 1 ; } ; fi ; } ; done
      - name: Calculate gold standard
        run: grep -v '>' HBB.fa | tr -d '\n' | fold -2 | grep -v '^.$'| sort | uniq -c | sort -k 2 | sed 's/^[[:space:]]*//;s/ /,/;1i N,DNT' > dinucgold1.csv ; grep -v '>' HBB.fa | tr -d '\n' | sed 's/^.//' | fold -2 | grep -v '^.$' | sort | uniq -c | sort -k 2 | sed 's/^[[:space:]]*//;s/ /,/;1i N,DNT' > dinucgold2.csv
      - name: Run autograding tests
        run: python3 -m pytest --timeout=30
